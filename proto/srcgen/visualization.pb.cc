// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: visualization.proto

#include "visualization.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace utils {
namespace visualization {
constexpr proto_visualizer_Coordinates::proto_visualizer_Coordinates(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : internal_cordinates_(){}
struct proto_visualizer_CoordinatesDefaultTypeInternal {
  constexpr proto_visualizer_CoordinatesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~proto_visualizer_CoordinatesDefaultTypeInternal() {}
  union {
    proto_visualizer_Coordinates _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT proto_visualizer_CoordinatesDefaultTypeInternal _proto_visualizer_Coordinates_default_instance_;
constexpr proto_visualizer_Geometry::proto_visualizer_Geometry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coordinates_()
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct proto_visualizer_GeometryDefaultTypeInternal {
  constexpr proto_visualizer_GeometryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~proto_visualizer_GeometryDefaultTypeInternal() {}
  union {
    proto_visualizer_Geometry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT proto_visualizer_GeometryDefaultTypeInternal _proto_visualizer_Geometry_default_instance_;
constexpr proto_visualizer_Features_PropertiesEntry_DoNotUse::proto_visualizer_Features_PropertiesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct proto_visualizer_Features_PropertiesEntry_DoNotUseDefaultTypeInternal {
  constexpr proto_visualizer_Features_PropertiesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~proto_visualizer_Features_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    proto_visualizer_Features_PropertiesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT proto_visualizer_Features_PropertiesEntry_DoNotUseDefaultTypeInternal _proto_visualizer_Features_PropertiesEntry_DoNotUse_default_instance_;
constexpr proto_visualizer_Features::proto_visualizer_Features(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : properties_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , geometry_(nullptr){}
struct proto_visualizer_FeaturesDefaultTypeInternal {
  constexpr proto_visualizer_FeaturesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~proto_visualizer_FeaturesDefaultTypeInternal() {}
  union {
    proto_visualizer_Features _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT proto_visualizer_FeaturesDefaultTypeInternal _proto_visualizer_Features_default_instance_;
constexpr proto_visualizer::proto_visualizer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : features_()
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct proto_visualizerDefaultTypeInternal {
  constexpr proto_visualizerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~proto_visualizerDefaultTypeInternal() {}
  union {
    proto_visualizer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT proto_visualizerDefaultTypeInternal _proto_visualizer_default_instance_;
}  // namespace visualization
}  // namespace utils
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_visualization_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_visualization_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_visualization_2eproto = nullptr;

const uint32_t TableStruct_visualization_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Coordinates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Coordinates, internal_cordinates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Geometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Geometry, coordinates_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Geometry, type_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features, geometry_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features, type_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer_Features, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer, type_),
  PROTOBUF_FIELD_OFFSET(::utils::visualization::proto_visualizer, features_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::utils::visualization::proto_visualizer_Coordinates)},
  { 7, -1, -1, sizeof(::utils::visualization::proto_visualizer_Geometry)},
  { 15, 23, -1, sizeof(::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse)},
  { 25, -1, -1, sizeof(::utils::visualization::proto_visualizer_Features)},
  { 34, -1, -1, sizeof(::utils::visualization::proto_visualizer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utils::visualization::_proto_visualizer_Coordinates_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utils::visualization::_proto_visualizer_Geometry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utils::visualization::_proto_visualizer_Features_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utils::visualization::_proto_visualizer_Features_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utils::visualization::_proto_visualizer_default_instance_),
};

const char descriptor_table_protodef_visualization_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023visualization.proto\022\023utils.visualizati"
  "on\"\330\003\n\020proto_visualizer\022\014\n\004type\030\001 \001(\t\022@\n"
  "\010features\030\002 \003(\0132..utils.visualization.pr"
  "oto_visualizer.Features\032.\n\013Coordinates\022\037"
  "\n\023internal_cordinates\030\001 \003(\001B\002\020\001\032`\n\010Geome"
  "try\022F\n\013coordinates\030\001 \003(\01321.utils.visuali"
  "zation.proto_visualizer.Coordinates\022\014\n\004t"
  "ype\030\002 \001(\t\032\341\001\n\010Features\022@\n\010geometry\030\001 \001(\013"
  "2..utils.visualization.proto_visualizer."
  "Geometry\022\014\n\004type\030\002 \001(\t\022R\n\nproperties\030\003 \003"
  "(\0132>.utils.visualization.proto_visualize"
  "r.Features.PropertiesEntry\0321\n\017Properties"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001b\006p"
  "roto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_visualization_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_visualization_2eproto = {
  false, false, 525, descriptor_table_protodef_visualization_2eproto, "visualization.proto", 
  &descriptor_table_visualization_2eproto_once, nullptr, 0, 5,
  schemas, file_default_instances, TableStruct_visualization_2eproto::offsets,
  file_level_metadata_visualization_2eproto, file_level_enum_descriptors_visualization_2eproto, file_level_service_descriptors_visualization_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_visualization_2eproto_getter() {
  return &descriptor_table_visualization_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_visualization_2eproto(&descriptor_table_visualization_2eproto);
namespace utils {
namespace visualization {

// ===================================================================

class proto_visualizer_Coordinates::_Internal {
 public:
};

proto_visualizer_Coordinates::proto_visualizer_Coordinates(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  internal_cordinates_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:utils.visualization.proto_visualizer.Coordinates)
}
proto_visualizer_Coordinates::proto_visualizer_Coordinates(const proto_visualizer_Coordinates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      internal_cordinates_(from.internal_cordinates_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:utils.visualization.proto_visualizer.Coordinates)
}

inline void proto_visualizer_Coordinates::SharedCtor() {
}

proto_visualizer_Coordinates::~proto_visualizer_Coordinates() {
  // @@protoc_insertion_point(destructor:utils.visualization.proto_visualizer.Coordinates)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void proto_visualizer_Coordinates::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void proto_visualizer_Coordinates::ArenaDtor(void* object) {
  proto_visualizer_Coordinates* _this = reinterpret_cast< proto_visualizer_Coordinates* >(object);
  (void)_this;
}
void proto_visualizer_Coordinates::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void proto_visualizer_Coordinates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void proto_visualizer_Coordinates::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.visualization.proto_visualizer.Coordinates)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  internal_cordinates_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* proto_visualizer_Coordinates::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated double internal_cordinates = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_internal_cordinates(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 9) {
          _internal_add_internal_cordinates(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* proto_visualizer_Coordinates::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utils.visualization.proto_visualizer.Coordinates)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double internal_cordinates = 1 [packed = true];
  if (this->_internal_internal_cordinates_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_internal_cordinates(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.visualization.proto_visualizer.Coordinates)
  return target;
}

size_t proto_visualizer_Coordinates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.visualization.proto_visualizer.Coordinates)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double internal_cordinates = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_internal_cordinates_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData proto_visualizer_Coordinates::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    proto_visualizer_Coordinates::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*proto_visualizer_Coordinates::GetClassData() const { return &_class_data_; }

void proto_visualizer_Coordinates::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<proto_visualizer_Coordinates *>(to)->MergeFrom(
      static_cast<const proto_visualizer_Coordinates &>(from));
}


void proto_visualizer_Coordinates::MergeFrom(const proto_visualizer_Coordinates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.visualization.proto_visualizer.Coordinates)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  internal_cordinates_.MergeFrom(from.internal_cordinates_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void proto_visualizer_Coordinates::CopyFrom(const proto_visualizer_Coordinates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.visualization.proto_visualizer.Coordinates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_visualizer_Coordinates::IsInitialized() const {
  return true;
}

void proto_visualizer_Coordinates::InternalSwap(proto_visualizer_Coordinates* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  internal_cordinates_.InternalSwap(&other->internal_cordinates_);
}

::PROTOBUF_NAMESPACE_ID::Metadata proto_visualizer_Coordinates::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_visualization_2eproto_getter, &descriptor_table_visualization_2eproto_once,
      file_level_metadata_visualization_2eproto[0]);
}

// ===================================================================

class proto_visualizer_Geometry::_Internal {
 public:
};

proto_visualizer_Geometry::proto_visualizer_Geometry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coordinates_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:utils.visualization.proto_visualizer.Geometry)
}
proto_visualizer_Geometry::proto_visualizer_Geometry(const proto_visualizer_Geometry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coordinates_(from.coordinates_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:utils.visualization.proto_visualizer.Geometry)
}

inline void proto_visualizer_Geometry::SharedCtor() {
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

proto_visualizer_Geometry::~proto_visualizer_Geometry() {
  // @@protoc_insertion_point(destructor:utils.visualization.proto_visualizer.Geometry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void proto_visualizer_Geometry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void proto_visualizer_Geometry::ArenaDtor(void* object) {
  proto_visualizer_Geometry* _this = reinterpret_cast< proto_visualizer_Geometry* >(object);
  (void)_this;
}
void proto_visualizer_Geometry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void proto_visualizer_Geometry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void proto_visualizer_Geometry::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.visualization.proto_visualizer.Geometry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coordinates_.Clear();
  type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* proto_visualizer_Geometry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .utils.visualization.proto_visualizer.Coordinates coordinates = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coordinates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "utils.visualization.proto_visualizer.Geometry.type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* proto_visualizer_Geometry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utils.visualization.proto_visualizer.Geometry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .utils.visualization.proto_visualizer.Coordinates coordinates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coordinates_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_coordinates(i), target, stream);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utils.visualization.proto_visualizer.Geometry.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.visualization.proto_visualizer.Geometry)
  return target;
}

size_t proto_visualizer_Geometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.visualization.proto_visualizer.Geometry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .utils.visualization.proto_visualizer.Coordinates coordinates = 1;
  total_size += 1UL * this->_internal_coordinates_size();
  for (const auto& msg : this->coordinates_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData proto_visualizer_Geometry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    proto_visualizer_Geometry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*proto_visualizer_Geometry::GetClassData() const { return &_class_data_; }

void proto_visualizer_Geometry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<proto_visualizer_Geometry *>(to)->MergeFrom(
      static_cast<const proto_visualizer_Geometry &>(from));
}


void proto_visualizer_Geometry::MergeFrom(const proto_visualizer_Geometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.visualization.proto_visualizer.Geometry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coordinates_.MergeFrom(from.coordinates_);
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void proto_visualizer_Geometry::CopyFrom(const proto_visualizer_Geometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.visualization.proto_visualizer.Geometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_visualizer_Geometry::IsInitialized() const {
  return true;
}

void proto_visualizer_Geometry::InternalSwap(proto_visualizer_Geometry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coordinates_.InternalSwap(&other->coordinates_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata proto_visualizer_Geometry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_visualization_2eproto_getter, &descriptor_table_visualization_2eproto_once,
      file_level_metadata_visualization_2eproto[1]);
}

// ===================================================================

proto_visualizer_Features_PropertiesEntry_DoNotUse::proto_visualizer_Features_PropertiesEntry_DoNotUse() {}
proto_visualizer_Features_PropertiesEntry_DoNotUse::proto_visualizer_Features_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void proto_visualizer_Features_PropertiesEntry_DoNotUse::MergeFrom(const proto_visualizer_Features_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata proto_visualizer_Features_PropertiesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_visualization_2eproto_getter, &descriptor_table_visualization_2eproto_once,
      file_level_metadata_visualization_2eproto[2]);
}

// ===================================================================

class proto_visualizer_Features::_Internal {
 public:
  static const ::utils::visualization::proto_visualizer_Geometry& geometry(const proto_visualizer_Features* msg);
};

const ::utils::visualization::proto_visualizer_Geometry&
proto_visualizer_Features::_Internal::geometry(const proto_visualizer_Features* msg) {
  return *msg->geometry_;
}
proto_visualizer_Features::proto_visualizer_Features(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  properties_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:utils.visualization.proto_visualizer.Features)
}
proto_visualizer_Features::proto_visualizer_Features(const proto_visualizer_Features& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_geometry()) {
    geometry_ = new ::utils::visualization::proto_visualizer_Geometry(*from.geometry_);
  } else {
    geometry_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:utils.visualization.proto_visualizer.Features)
}

inline void proto_visualizer_Features::SharedCtor() {
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
geometry_ = nullptr;
}

proto_visualizer_Features::~proto_visualizer_Features() {
  // @@protoc_insertion_point(destructor:utils.visualization.proto_visualizer.Features)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void proto_visualizer_Features::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete geometry_;
}

void proto_visualizer_Features::ArenaDtor(void* object) {
  proto_visualizer_Features* _this = reinterpret_cast< proto_visualizer_Features* >(object);
  (void)_this;
  _this->properties_. ~MapField();
}
inline void proto_visualizer_Features::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &proto_visualizer_Features::ArenaDtor);
  }
}
void proto_visualizer_Features::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void proto_visualizer_Features::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.visualization.proto_visualizer.Features)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && geometry_ != nullptr) {
    delete geometry_;
  }
  geometry_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* proto_visualizer_Features::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .utils.visualization.proto_visualizer.Geometry geometry = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_geometry(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "utils.visualization.proto_visualizer.Features.type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> properties = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* proto_visualizer_Features::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utils.visualization.proto_visualizer.Features)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .utils.visualization.proto_visualizer.Geometry geometry = 1;
  if (this->_internal_has_geometry()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::geometry(this), target, stream);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utils.visualization.proto_visualizer.Features.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // map<string, string> properties = 3;
  if (!this->_internal_properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "utils.visualization.proto_visualizer.Features.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "utils.visualization.proto_visualizer.Features.PropertiesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = proto_visualizer_Features_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it) {
        target = proto_visualizer_Features_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.visualization.proto_visualizer.Features)
  return target;
}

size_t proto_visualizer_Features::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.visualization.proto_visualizer.Features)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += proto_visualizer_Features_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // .utils.visualization.proto_visualizer.Geometry geometry = 1;
  if (this->_internal_has_geometry()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *geometry_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData proto_visualizer_Features::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    proto_visualizer_Features::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*proto_visualizer_Features::GetClassData() const { return &_class_data_; }

void proto_visualizer_Features::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<proto_visualizer_Features *>(to)->MergeFrom(
      static_cast<const proto_visualizer_Features &>(from));
}


void proto_visualizer_Features::MergeFrom(const proto_visualizer_Features& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.visualization.proto_visualizer.Features)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_has_geometry()) {
    _internal_mutable_geometry()->::utils::visualization::proto_visualizer_Geometry::MergeFrom(from._internal_geometry());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void proto_visualizer_Features::CopyFrom(const proto_visualizer_Features& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.visualization.proto_visualizer.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_visualizer_Features::IsInitialized() const {
  return true;
}

void proto_visualizer_Features::InternalSwap(proto_visualizer_Features* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  properties_.InternalSwap(&other->properties_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
  swap(geometry_, other->geometry_);
}

::PROTOBUF_NAMESPACE_ID::Metadata proto_visualizer_Features::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_visualization_2eproto_getter, &descriptor_table_visualization_2eproto_once,
      file_level_metadata_visualization_2eproto[3]);
}

// ===================================================================

class proto_visualizer::_Internal {
 public:
};

proto_visualizer::proto_visualizer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  features_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:utils.visualization.proto_visualizer)
}
proto_visualizer::proto_visualizer(const proto_visualizer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      features_(from.features_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:utils.visualization.proto_visualizer)
}

inline void proto_visualizer::SharedCtor() {
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

proto_visualizer::~proto_visualizer() {
  // @@protoc_insertion_point(destructor:utils.visualization.proto_visualizer)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void proto_visualizer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void proto_visualizer::ArenaDtor(void* object) {
  proto_visualizer* _this = reinterpret_cast< proto_visualizer* >(object);
  (void)_this;
}
void proto_visualizer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void proto_visualizer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void proto_visualizer::Clear() {
// @@protoc_insertion_point(message_clear_start:utils.visualization.proto_visualizer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* proto_visualizer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "utils.visualization.proto_visualizer.type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .utils.visualization.proto_visualizer.Features features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_features(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* proto_visualizer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utils.visualization.proto_visualizer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "utils.visualization.proto_visualizer.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // repeated .utils.visualization.proto_visualizer.Features features = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_features_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_features(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utils.visualization.proto_visualizer)
  return target;
}

size_t proto_visualizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utils.visualization.proto_visualizer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .utils.visualization.proto_visualizer.Features features = 2;
  total_size += 1UL * this->_internal_features_size();
  for (const auto& msg : this->features_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData proto_visualizer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    proto_visualizer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*proto_visualizer::GetClassData() const { return &_class_data_; }

void proto_visualizer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<proto_visualizer *>(to)->MergeFrom(
      static_cast<const proto_visualizer &>(from));
}


void proto_visualizer::MergeFrom(const proto_visualizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utils.visualization.proto_visualizer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void proto_visualizer::CopyFrom(const proto_visualizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utils.visualization.proto_visualizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proto_visualizer::IsInitialized() const {
  return true;
}

void proto_visualizer::InternalSwap(proto_visualizer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  features_.InternalSwap(&other->features_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata proto_visualizer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_visualization_2eproto_getter, &descriptor_table_visualization_2eproto_once,
      file_level_metadata_visualization_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace visualization
}  // namespace utils
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::utils::visualization::proto_visualizer_Coordinates* Arena::CreateMaybeMessage< ::utils::visualization::proto_visualizer_Coordinates >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utils::visualization::proto_visualizer_Coordinates >(arena);
}
template<> PROTOBUF_NOINLINE ::utils::visualization::proto_visualizer_Geometry* Arena::CreateMaybeMessage< ::utils::visualization::proto_visualizer_Geometry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utils::visualization::proto_visualizer_Geometry >(arena);
}
template<> PROTOBUF_NOINLINE ::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utils::visualization::proto_visualizer_Features_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::utils::visualization::proto_visualizer_Features* Arena::CreateMaybeMessage< ::utils::visualization::proto_visualizer_Features >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utils::visualization::proto_visualizer_Features >(arena);
}
template<> PROTOBUF_NOINLINE ::utils::visualization::proto_visualizer* Arena::CreateMaybeMessage< ::utils::visualization::proto_visualizer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utils::visualization::proto_visualizer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
